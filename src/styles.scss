// Import Angular Material theming
@use '@angular/material' as mat;

// Custom Palette
$custom-primary: (
  50: #ffe4e8,
  100: #ffbbc6,
  200: #ff8da1,
  300: #ff5f7b,
  400: #ff3d5e,
  500: #dc143c, // Main Primary
  600: #cc1236,
  700: #b80f2f,
  800: #a80c28,
  900: #8b071b,
  contrast: (
    50: rgba(0,0,0,0.87),
    100: rgba(0,0,0,0.87),
    200: rgba(0,0,0,0.87),
    300: white,
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  )
);

// Define the palettes
$app-primary: mat.define-palette($custom-primary);
$app-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
$app-warn: mat.define-palette(mat.$red-palette);

// Create the theme
$app-theme: mat.define-dark-theme((
  color: (
    primary: $app-primary,
    accent: $app-accent,
    warn: $app-warn,
  ),
  typography: mat.define-typography-config(),
  density: 0,
));

// Apply the theme
@include mat.all-component-themes($app-theme);

// Global Styles
:root {
  --primary-color: #dc143c;
  --primary-light: #ff1464;
  --primary-dark: #b80f2f;
  --background-dark: #121212;
  --background-light: #1e1e1e;
  --text-primary: rgba(255, 255, 255, 0.87);
  --text-secondary: rgba(255, 255, 255, 0.6);
  --border-color: rgba(255, 255, 255, 0.1);
  --error-color: #ff4081;
  --success-color: #4caf50;
}

// Reset and Base Styles
*, *::before, *::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html, body {
  height: 100%;
  background: var(--background-dark);
  color: var(--text-primary);
  font-family: 'Roboto', sans-serif;
  line-height: 1.6;
  overflow-x: hidden;
}

// Scrollbar Styling
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.05);
}

::-webkit-scrollbar-thumb {
  background: rgba(220, 20, 60, 0.5);
  border-radius: 4px;

  &:hover {
    background: rgba(220, 20, 60, 0.7);
  }
}

// Material Override Styles
.mat-mdc-dialog-container {
  --mdc-dialog-container-color: var(--background-light) !important;
  backdrop-filter: blur(10px);
}

.mat-mdc-snack-bar-container {
  --mdc-snackbar-container-color: var(--background-light) !important;
  backdrop-filter: blur(10px);
}

// Common Utility Classes
.gradient-text {
  background: linear-gradient(to right, #fff, rgba(255, 255, 255, 0.7));
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
}

.glass-bg {
  background: rgba(30, 30, 30, 0.95);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.05);
}

.hover-effect {
  transition: all 0.3s ease;
  
  &:hover {
    transform: translateY(-2px);
  }
}

// Animation Classes
.fade-in {
  animation: fadeIn 0.3s ease-in;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

// Material Components Override
.mat-mdc-raised-button.mat-primary {
  background: linear-gradient(135deg, var(--primary-color), var(--primary-light)) !important;
  box-shadow: 0 4px 15px rgba(220, 20, 60, 0.3) !important;
  
  &:hover {
    box-shadow: 0 6px 20px rgba(220, 20, 60, 0.4) !important;
    transform: translateY(-1px);
  }
}

.mat-mdc-form-field {
  .mat-mdc-form-field-flex {
    background: transparent !important;
  }

  .mdc-text-field--filled:not(.mdc-text-field--disabled) {
    background: transparent !important;
  }

  .mat-mdc-form-field-focus-overlay {
    background: transparent !important;
  }
}

// Form Controls
input, select, textarea {
  background: transparent;
  border: 2px solid var(--border-color);
  color: var(--text-primary);
  transition: all 0.3s ease;

  &:focus {
    border-color: var(--primary-color);
    outline: none;
    box-shadow: 0 0 0 4px rgba(220, 20, 60, 0.15);
  }
}

// Links
a {
  color: var(--primary-color);
  text-decoration: none;
  transition: color 0.3s ease;

  &:hover {
    color: var(--primary-light);
  }
}

// Selection
::selection {
  background: rgba(220, 20, 60, 0.2);
  color: var(--text-primary);
}

// Container
.container {
  max-width: 1400px;
  margin: 0 auto;
  padding: 0 1rem;
}

// Responsive
@media (max-width: 768px) {
  .container {
    padding: 0 0.75rem;
  }
}
